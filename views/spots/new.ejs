<% layout('layouts/boilerplate') %>

<div class="new-page">
  <div class="new-background">
    <div class="new-overlay"></div>
  </div>

  <div class="form-container">
    <div class="header">
      <h2>Add a New Spot</h2>
    </div>
    <form
      action="/spots"
      method="POST"
      class="new-form"
      id="new-form"
      onsubmit="return checkInputs()"
    >
      <div class="form-control">
        <label for="title" class="form-label">Name:</label>
        <input type="text" id="title" name="spot[title]" placeholder="NAME" />
        <i class="fas fa-check-circle"></i>
        <i class="fas fa-exclamation-circle"></i>
        <small class="small-error">Error</small>
        <small class="small-success">Looks Good</small>
      </div>

      <div class="form-control">
        <label for="image" class="form-label">Image:</label>
        <input type="text" id="image" name="spot[image]" placeholder="Url" />
        <i class="fas fa-check-circle"></i>
        <i class="fas fa-exclamation-circle"></i>
        <small class="small-error">Error</small>
        <small class="small-success">Looks Good</small>
      </div>

      <div class="form-control">
        <label for="location" class="form-label">Location: </label>
        <input
          type="text"
          id="location"
          name="spot[location]"
          placeholder="CITY, STATE"
        />
        <i class="fas fa-check-circle"></i>
        <i class="fas fa-exclamation-circle"></i>
        <small class="small-error">Error</small>
        <small class="small-success">Looks Good</small>
      </div>

      <div class="form-control">
        <label for="description" class="form-label">Description:</label>
        <textarea
          name="spot[description]"
          id="description"
          cols="20"
          rows="1"
        ></textarea>
        <i class="fas fa-check-circle"></i>
        <i class="fas fa-exclamation-circle"></i>
        <small class="small-error">Error</small>
        <small class="small-success">Looks Good</small>
      </div>
      <div class="new-page-buttons">
        <button class="new-button" type="submit" id="new-submit">
          Add Spot
        </button>
        <a href="/spots" class="new-back-button">All Spots</a>
      </div>
    </form>
  </div>
</div>

<script>
  const form = document.getElementById('new-form');
  const spotName = document.getElementById('title');
  const spotImage = document.getElementById('image');
  const spotLocation = document.getElementById('location');
  const spotDescription = document.getElementById('description');
  const submitButton = document.getElementById('new-submit');

  form.addEventListener('click', e => {
    checkInputs();
  });

  function checkInputs() {
    const spotnameTitle = spotName.value.trim();
    const spotnameImage = spotImage.value.trim();
    const spotnameLocation = spotLocation.value.trim();
    const spotnameDescription = spotDescription.value.trim();
    const submitButton = document.getElementById('new-submit');

    if (spotnameTitle === '') {
      setErrorFor(spotName, 'Name can not be blank');
      submitButton.disabled = true;
    } else {
      setSuccessFor(spotName, 'Looks Good');
      submitButton.disabled = false;
    }

    if (spotnameImage === '') {
      setErrorFor(spotImage, 'Image Url can not be blank');
      submitButton.disabled = true;
    } else {
      setSuccessFor(spotImage, 'Looks Good');
    }

    if (spotnameLocation === '') {
      setErrorFor(spotLocation, 'Location can not be blank');
      submitButton.disabled = true;
    } else {
      setSuccessFor(spotLocation, 'Looks Good');
    }

    if (spotnameDescription === '') {
      setErrorFor(spotDescription, 'Description can not be blank');
      submitButton.disabled = true;
    } else {
      setSuccessFor(spotDescription, 'Looks Good');
    }
  }

  // add success message inside <small> input
  function setSuccessFor(input, message) {
    const formControl = input.parentElement; // parent is .form-control
    const small = formControl.querySelector('small');

    small.innerText = message;
    // add error class
    formControl.className = 'form-control success';
  }

  // add error message inside <small> input
  function setErrorFor(input, message) {
    const formControl = input.parentElement; // parent is .form-control
    const small = formControl.querySelector('small');

    small.innerText = message;
    // add success class
    formControl.className = 'form-control error';
  }
</script>
